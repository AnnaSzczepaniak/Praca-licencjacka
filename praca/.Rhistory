wynik2_householder$R
M_2_givens = wynik2_givens$Q  %*% wynik2_givens$R
M_21 = M_2_givens - M_2
blad_givens_M_2 = norm(M_21)
blad_givens_M_2
M_2_qr = qr.Q(QR) %*% qr.R(QR)
M_22 = M_2_qr - M_2
blad_qr_M_2 = norm(M_22)
blad_qr_M_2
M_2_householder = wynik2_householder$Q %*% wynik2_householder$R
M_23 = M_2_householder - M_2
blad_householder_M_2 = norm(M_23)
blad_householder_M_2
min(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
max(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
M_3<-matrix(c(replicate(125, rnorm(125)) ), 125, 125, byrow=TRUE)
QR = qr(M_3)
qr.Q(QR)
qr.R(QR)
knitr::opts_chunk$set(echo = TRUE)
A= matrix(c(1,2,2,2,2,1,2,1,2), 3,3, byrow = TRUE)
house = function(x) {
norm_x = sqrt(t(x) %*% x)
if (x[1] > 0) {
x[1] = x[1] + norm_x;
} else {
x[1] = x[1] - norm_x;
}
return(x)
}
qr_householer = function(A)
{
R = A
dimm = dim(A)
n = dimm[2]
m = dimm[1]
Q = diag(n)
for (i in 1:min(m-1,n)){
u = house(R[i:m,i])
den =  (t(u) %*% u)[1,1]
P = diag(n+1-i) - 2/den * ( u%*% t(u)  )
R[i:m,i:n] = P %*% R[i:m,i:n]
if (i>1)
Q[i:n,1:(i-1)] = P %*% Q[i:n,1:(i-1)]
Q[i:n,i:n] = P %*% Q[i:n,i:n]
}
return(list(R=R, Q=t(Q)))
}
qr_householer(A)
qr.Q(qr(A))
givens = function(i,j,A){
dimm = dim(A)
n = dimm[1]
G = diag(n)
p = sqrt((A[i,i])^2 + (A[j,i])^2)
G[i,i] = A[i,i]/ p
G[i,j] = (A[j,i])/p
G[j,i] = -(A[j,i])/p
G[j,j] = A[i,i]/ p
return(G)
}
qr_givens = function(A){
R = A
n = dim(A)[2]
m = dim(A)[1]
Q = diag(n)
for (i in 1:(n-1)) {
for (j in (i+1):m) {
G = givens(i,j,R)
R = G %*% R
Q = Q %*% t(G)
}
}
return(list(R=R, Q=Q))
}
qr_givens(A)
M_1<-matrix(c(replicate(5, rnorm(5)) ), 5, 5, byrow=TRUE)
M_1
QR = qr(M_1)
qr.Q(QR)
qr.R(QR)
wynik1_givens = qr_givens(M_1)
wynik1_givens$Q
wynik1_givens$R
wynik1_householder = qr_householer(M_1)
wynik1_householder$Q
wynik1_householder$R
M_1_givens = wynik1_givens$Q  %*% wynik1_givens$R
M_11 = M_1_givens - M_1
blad_givens_M_1 = norm(M_11)
blad_givens_M_1
M_1_qr = qr.Q(QR) %*% qr.R(QR)
M_12 = M_1_qr - M_1
blad_qr_M_1 = norm(M_12)
blad_qr_M_1
M_1_householder = wynik1_householder$Q %*% wynik1_householder$R
M_13 = M_1_householder - M_1
blad_householder_M_1 = norm(M_13)
blad_householder_M_1
min(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
max(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
M_2<-matrix(c(replicate(25, rnorm(25)) ), 25, 25, byrow=TRUE)
QR = qr(M_2)
wynik2_givens = qr_givens(M_2)
wynik2_householder = qr_householer(M_2)
M_2_givens = wynik2_givens$Q  %*% wynik2_givens$R
M_21 = M_2_givens - M_2
blad_givens_M_2 = norm(M_21)
blad_givens_M_2
M_2_qr = qr.Q(QR) %*% qr.R(QR)
M_22 = M_2_qr - M_2
blad_qr_M_2 = norm(M_22)
blad_qr_M_2
M_2_householder = wynik2_householder$Q %*% wynik2_householder$R
M_23 = M_2_householder - M_2
blad_householder_M_2 = norm(M_23)
blad_householder_M_2
min(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
max(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
M_3<-matrix(c(replicate(125, rnorm(125)) ), 125, 125, byrow=TRUE)
QR = qr(M_3
wynik3_householder = qr_householer(M_3)
M_3_givens = wynik3_givens$Q  %*% wynik3_givens$R
wynik3_givens = qr_givens(M_3)
wynik3_givens = qr_givens(M_3)
wynik3_givens = qr_givens(M_3)
knitr::opts_chunk$set(echo = TRUE)
A= matrix(c(1,2,2,2,2,1,2,1,2), 3,3, byrow = TRUE)
house = function(x) {
norm_x = sqrt(t(x) %*% x)
if (x[1] > 0) {
x[1] = x[1] + norm_x;
} else {
x[1] = x[1] - norm_x;
}
return(x)
}
qr_householer = function(A)
{
R = A
dimm = dim(A)
n = dimm[2]
m = dimm[1]
Q = diag(n)
for (i in 1:min(m-1,n)){
u = house(R[i:m,i])
den =  (t(u) %*% u)[1,1]
P = diag(n+1-i) - 2/den * ( u%*% t(u)  )
R[i:m,i:n] = P %*% R[i:m,i:n]
if (i>1)
Q[i:n,1:(i-1)] = P %*% Q[i:n,1:(i-1)]
Q[i:n,i:n] = P %*% Q[i:n,i:n]
}
return(list(R=R, Q=t(Q)))
}
qr_householer(A)
qr.Q(qr(A))
givens = function(i,j,A){
dimm = dim(A)
n = dimm[1]
G = diag(n)
p = sqrt((A[i,i])^2 + (A[j,i])^2)
G[i,i] = A[i,i]/ p
G[i,j] = (A[j,i])/p
G[j,i] = -(A[j,i])/p
G[j,j] = A[i,i]/ p
return(G)
}
qr_givens = function(A){
R = A
n = dim(A)[2]
m = dim(A)[1]
Q = diag(n)
for (i in 1:(n-1)) {
for (j in (i+1):m) {
G = givens(i,j,R)
R = G %*% R
Q = Q %*% t(G)
}
}
return(list(R=R, Q=Q))
}
qr_givens(A)
M_1<-matrix(c(replicate(5, rnorm(5)) ), 5, 5, byrow=TRUE)
M_1
QR = qr(M_1)
wynik1_givens = qr_givens(M_1)
wynik1_householder = qr_householer(M_1)
knitr::opts_chunk$set(echo = TRUE)
A= matrix(c(1,2,2,2,2,1,2,1,2), 3,3, byrow = TRUE)
house = function(x) {
norm_x = sqrt(t(x) %*% x)
if (x[1] > 0) {
x[1] = x[1] + norm_x;
} else {
x[1] = x[1] - norm_x;
}
return(x)
}
qr_householer = function(A)
{
R = A
dimm = dim(A)
n = dimm[2]
m = dimm[1]
Q = diag(n)
for (i in 1:min(m-1,n)){
u = house(R[i:m,i])
den =  (t(u) %*% u)[1,1]
P = diag(n+1-i) - 2/den * ( u%*% t(u)  )
R[i:m,i:n] = P %*% R[i:m,i:n]
if (i>1)
Q[i:n,1:(i-1)] = P %*% Q[i:n,1:(i-1)]
Q[i:n,i:n] = P %*% Q[i:n,i:n]
}
return(list(R=R, Q=t(Q)))
}
qr_householer(A)
qr.Q(qr(A))
givens = function(i,j,A){
dimm = dim(A)
n = dimm[1]
G = diag(n)
p = sqrt((A[i,i])^2 + (A[j,i])^2)
G[i,i] = A[i,i]/ p
G[i,j] = (A[j,i])/p
G[j,i] = -(A[j,i])/p
G[j,j] = A[i,i]/ p
return(G)
}
qr_givens = function(A){
R = A
n = dim(A)[2]
m = dim(A)[1]
Q = diag(n)
for (i in 1:(n-1)) {
for (j in (i+1):m) {
G = givens(i,j,R)
R = G %*% R
Q = Q %*% t(G)
}
}
return(list(R=R, Q=Q))
}
qr_givens(A)
M_1<-matrix(c(replicate(5, rnorm(5)) ), 5, 5, byrow=TRUE)
M_1
QR = qr(M_1)
wynik1_givens = qr_givens(M_1)
wynik1_householder = qr_householer(M_1)
M_1_givens = wynik1_givens$Q  %*% wynik1_givens$R
M_11 = M_1_givens - M_1
blad_givens_M_1 = norm(M_11)
blad_givens_M_1
M_1_qr = qr.Q(QR) %*% qr.R(QR)
M_12 = M_1_qr - M_1
blad_qr_M_1 = norm(M_12)
blad_qr_M_1
M_1_householder = wynik1_householder$Q %*% wynik1_householder$R
M_13 = M_1_householder - M_1
blad_householder_M_1 = norm(M_13)
blad_householder_M_1
min(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
max(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
M_2<-matrix(c(replicate(25, rnorm(25)) ), 25, 25, byrow=TRUE)
QR = qr(M_2)
wynik2_givens = qr_givens(M_2)
wynik2_householder = qr_householer(M_2)
M_2_givens = wynik2_givens$Q  %*% wynik2_givens$R
M_21 = M_2_givens - M_2
blad_givens_M_2 = norm(M_21)
blad_givens_M_2
M_2_qr = qr.Q(QR) %*% qr.R(QR)
M_22 = M_2_qr - M_2
blad_qr_M_2 = norm(M_22)
blad_qr_M_2
M_2_householder = wynik2_householder$Q %*% wynik2_householder$R
M_23 = M_2_householder - M_2
blad_householder_M_2 = norm(M_23)
blad_householder_M_2
min(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
max(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
M_3<-matrix(c(replicate(125, rnorm(125)) ), 125, 125, byrow=TRUE)
QR = qr(M_3)
wynik3_givens = qr_givens(M_3)
QR = qr(M_1)
wynik1_givens = qr_givens(M_1)
wynik1_householder = qr_householer(M_1)
M_1_givens = wynik1_givens$Q  %*% wynik1_givens$R
M_11 = M_1_givens - M_1
blad_givens_M_1 = norm(M_11)
blad_givens_M_1
M_1_qr = qr.Q(QR) %*% qr.R(QR)
M_12 = M_1_qr - M_1
blad_qr_M_1 = norm(M_12)
blad_qr_M_1
M_1_householder = wynik1_householder$Q %*% wynik1_householder$R
M_13 = M_1_householder - M_1
blad_householder_M_1 = norm(M_13)
blad_householder_M_1
min(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
max(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
M_2<-matrix(c(replicate(25, rnorm(25)) ), 25, 25, byrow=TRUE)
QR = qr(M_2)
wynik2_givens = qr_givens(M_2)
wynik2_householder = qr_householer(M_2)
M_2_givens = wynik2_givens$Q  %*% wynik2_givens$R
M_21 = M_2_givens - M_2
blad_givens_M_2 = norm(M_21)
blad_givens_M_2
M_2_qr = qr.Q(QR) %*% qr.R(QR)
M_22 = M_2_qr - M_2
blad_qr_M_2 = norm(M_22)
blad_qr_M_2
M_2_householder = wynik2_householder$Q %*% wynik2_householder$R
M_23 = M_2_householder - M_2
blad_householder_M_2 = norm(M_23)
blad_householder_M_2
min(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
max(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
M_3<-matrix(c(replicate(125, rnorm(125)) ), 125, 125, byrow=TRUE)
QR = qr(M_3)
wynik3_givens = qr_givens(M_3)
wynik3_givens = qr_givens(M_3)
wynik3_householder = qr_householer(M_3)
knitr::opts_chunk$set(echo = TRUE)
A= matrix(c(1,2,2,2,2,1,2,1,2), 3,3, byrow = TRUE)
house = function(x) {
norm_x = sqrt(t(x) %*% x)
if (x[1] > 0) {
x[1] = x[1] + norm_x;
} else {
x[1] = x[1] - norm_x;
}
return(x)
}
qr_householer = function(A)
{
R = A
dimm = dim(A)
n = dimm[2]
m = dimm[1]
Q = diag(n)
for (i in 1:min(m-1,n)){
u = house(R[i:m,i])
den =  (t(u) %*% u)[1,1]
P = diag(n+1-i) - 2/den * ( u%*% t(u)  )
R[i:m,i:n] = P %*% R[i:m,i:n]
if (i>1)
Q[i:n,1:(i-1)] = P %*% Q[i:n,1:(i-1)]
Q[i:n,i:n] = P %*% Q[i:n,i:n]
}
return(list(R=R, Q=t(Q)))
}
qr_householer(A)
qr.Q(qr(A))
givens = function(i,j,A){
dimm = dim(A)
n = dimm[1]
G = diag(n)
p = sqrt((A[i,i])^2 + (A[j,i])^2)
G[i,i] = A[i,i]/ p
G[i,j] = (A[j,i])/p
G[j,i] = -(A[j,i])/p
G[j,j] = A[i,i]/ p
return(G)
}
qr_givens = function(A){
R = A
n = dim(A)[2]
m = dim(A)[1]
Q = diag(n)
for (i in 1:(n-1)) {
for (j in (i+1):m) {
G = givens(i,j,R)
R = G %*% R
Q = Q %*% t(G)
}
}
return(list(R=R, Q=Q))
}
qr_givens(A)
M_1<-matrix(c(replicate(5, rnorm(5)) ), 5, 5, byrow=TRUE)
M_1
QR = qr(M_1)
wynik1_givens = qr_givens(M_1)
wynik1_householder = qr_householer(M_1)
M_1_givens = wynik1_givens$Q  %*% wynik1_givens$R
M_11 = M_1_givens - M_1
blad_givens_M_1 = norm(M_11)
blad_givens_M_1
M_1_qr = qr.Q(QR) %*% qr.R(QR)
M_12 = M_1_qr - M_1
blad_qr_M_1 = norm(M_12)
blad_qr_M_1
M_1_householder = wynik1_householder$Q %*% wynik1_householder$R
M_13 = M_1_householder - M_1
blad_householder_M_1 = norm(M_13)
blad_householder_M_1
min(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
max(blad_givens_M_1, blad_householder_M_1, blad_qr_M_1)
M_2<-matrix(c(replicate(25, rnorm(25)) ), 25, 25, byrow=TRUE)
QR = qr(M_2)
wynik2_givens = qr_givens(M_2)
wynik2_householder = qr_householer(M_2)
M_2_givens = wynik2_givens$Q  %*% wynik2_givens$R
M_21 = M_2_givens - M_2
blad_givens_M_2 = norm(M_21)
blad_givens_M_2
M_2_qr = qr.Q(QR) %*% qr.R(QR)
M_22 = M_2_qr - M_2
blad_qr_M_2 = norm(M_22)
blad_qr_M_2
M_2_householder = wynik2_householder$Q %*% wynik2_householder$R
M_23 = M_2_householder - M_2
blad_householder_M_2 = norm(M_23)
blad_householder_M_2
min(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
max(blad_givens_M_2,blad_householder_M_2, blad_qr_M_2)
M_3<-matrix(c(replicate(125, rnorm(125)) ), 125, 125, byrow=TRUE)
QR = qr(M_3)
wynik3_givens = qr_givens(M_3)
plot(sin, -pi, 2*pi)
?plot
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
plot(rpois(100, 5), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
?plot
points(x, cex = .5, col = "dark red")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"l\")")
wymiary<-c(5,25,125)
bledy<-c(blad_qr_M_1,blad_qr_M_2,blad_qr_M_3)
blad_givens_M_1
blad_givens_M_2
blad_givens_M_3
blad_givens_M_3
M_3_givens = wynik3_givens$Q  %*% wynik3_givens$R
M_31 = M_3_givens - M_3
blad_givens_M_3 = norm(M_31)
blad_givens_M_3
bledy<-c(blad_qr_M_1,blad_qr_M_2,blad_qr_M_3)
M_3_qr = qr.Q(QR) %*% qr.R(QR)
M_32 = M_3_qr - M_3
blad_qr_M_3 = norm(M_32)
blad_qr_M_3
bledy<-c(blad_qr_M_1,blad_qr_M_2,blad_qr_M_3)
wykres <- plot(bledy,wymiary, type = l)
wykres
wykres <- plot(wymiary, bledy)
wykres <- plot(wymiary, bledy , type = "l")
?lines
lines(bledy1, wymiary)
bledy1<-c(blad_qr_M_1,blad_qr_M_2,blad_qr_M_3)
lines(bledy1, wymiary)
wymiary<-c(5,25,125)
bledy1<-c(blad_qr_M_1,blad_qr_M_2,blad_qr_M_3)
bledy2<-c(blad_givens_M_1,blad_givens_M_2,blad_givens_M_3)
bledy3<-c(blad_householder_M_1,blad_householder_M_2,blad_householder_M_3)
M_3_householder = wynik3_householder$Q %*% wynik3_householder$R
M_33 = M_3_householder - M_3
blad_householder_M_3 = norm(M_33)
blad_householder_M_3
M_3_householder = wynik3_householder$Q %*% wynik3_householder$R
M_33 = M_3_householder - M_3
blad_householder_M_3 = norm(M_33)
blad_householder_M_3
wymiary<-c(5,25,125)
bledy1<-c(blad_qr_M_1,blad_qr_M_2,blad_qr_M_3)
bledy2<-c(blad_givens_M_1,blad_givens_M_2,blad_givens_M_3)
bledy3<-c(blad_householder_M_1,blad_householder_M_2,blad_householder_M_3)
lines(bledy1, bledy2, bledy3, wymiary)
lines((bledy1, wymiary) type = "l", (bledy2,wymiary), type = "l", (bledy3, wymiary), type= "l")
lines(bledy1, wymiary , bledy2,wymiary, bledy3, wymiary)
?lines
lines(bledy1, wymiary , bledy2,wymiary, bledy3, wymiary, type = "l")
lines(bledy3, wymiary, type = "l")
lines(bledy2,wymiary, type = "l")
plot(wymiary, bledy1, bledy2, bledy3, type = "l")
?plot.window
plot.window(xlim = wymiary, ylim = bledy1, bledy2, bledy3, type = "l")
plot.window(xlim = wymiary, ylim = bledy1, ylim = bledy2,  ylim = bledy3, type = "l")
plot (wymiary, bledy1, bledy2, bledy3)
?plot
?plot
plot(wymiary, bledy1, type = 'l', col = 'blue', ylim=c(0,5e-13), ylab = "Bledy")
lines(wymiary, bledy2, col='green')
lines(wymiary, bledy3, col='red')
legend(1, 95, legend=c("qr in R", "qr givens", "qr householder"),
col=c("blue", "green", "red"), lty=1:2, cex=0.8,
box.lty=0)
plot(wymiary, bledy1, type = 'l', col = 'blue', ylim=c(0,5e-13), ylab = "Bledy")
lines(wymiary, bledy2, col='green')
lines(wymiary, bledy3, col='red')
legend(1, 95, legend=c("qr in R", "qr givens", "qr householder"),
col=c("blue", "green", "red"), lty=1:2, cex=0.8,
box.lty=0)
legend(1, 95, legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), lty=1:2, cex=0.8,box.lty=0)
legend(legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), box.lty=0)
legend(wymiary, legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), box.lty=0)
legend(20, 0.1, legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), box.lty=0)
legend(20, 0, legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), box.lty=0)
legend(20, 0.0000000005, legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), box.lty=0)
2*e(-13)
2*exp(-13)
legend(100, 0.000005, legend=c("qr in R", "qr givens", "qr householder"), col=c("blue", "green", "red"), box.lty=0)
legend(20,0.000008, legend=c("qr in R", "qr givens", "qr householder"), lwd=c(10,0.000001),col=c("blue", "green", "red"))
@
legend(20,0.000008, legend=c("qr in R", "qr givens", "qr householder"), lwd=c(10,0.000001),col=c("blue", "green", "red"))
legend(20,0.00000008, legend=c("qr in R", "qr givens", "qr householder"), lwd=c(10,0.000001),col=c("blue", "green", "red"))
?legend
